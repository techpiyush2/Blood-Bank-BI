{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\pk409\\\\OneDrive\\\\Desktop\\\\MERN-Stack-Blood-Bank-master\\\\frontend\\\\src\\\\screens\\\\LogHistoryScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getLogHistory } from '../actions/userActions';\nimport ReactPaginate from 'react-paginate';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nconst UserLogHistoryScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userLogHistory = useSelector(state => state.userLogHistory);\n  const {\n    loading,\n    error,\n    logHistory\n  } = userLogHistory;\n  useEffect(() => {\n    dispatch(getLogHistory());\n  }, [dispatch]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = logHistory && logHistory.slice(indexOfFirstItem, indexOfLastItem);\n  const totalItems = logHistory && Math.ceil(logHistory.length / itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users Login History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-sm hover bordered striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"LOG ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"NAME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"EMAIL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"LOGIN DATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"LOGIN TIME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentItems && currentItems.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: log._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: log.user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `mailto:${log.user.email}`,\n                  children: log.user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Moment, {\n                  format: \"YYYY-MM-DD\",\n                  children: moment(log.logDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Moment, {\n                  format: \"HH:mm:ss\",\n                  children: moment(log.logDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this)]\n            }, log._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), logHistory && logHistory.length > itemsPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          previousLabel: \"previous\",\n          previousClassName: \"page-item\",\n          previousLinkClassName: \"page-link\",\n          nextLabel: \"next\",\n          nextClassName: \"page-item\",\n          nextLinkClassName: \"page-link\",\n          pageClassName: \"page-item\",\n          pageLinkClassName: \"page-link\",\n          activeClassName: \"page-item active\",\n          activeLinkClassName: 'page-link',\n          breakLabel: '...',\n          breakClassName: 'page-item',\n          breakLinkClassName: 'page-link',\n          pageCount: totalItems && totalItems,\n          marginPagesDisplayed: 2,\n          pageRangeDisplayed: 2,\n          onPageChange: e => setCurrentPage(e.selected + 1),\n          containerClassName: 'page pagination'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(UserLogHistoryScreen, \"lIN2wfaYKKtRnaoQt3GOFZTmjVU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserLogHistoryScreen;\nexport default UserLogHistoryScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLogHistoryScreen\");","map":{"version":3,"sources":["C:/Users/pk409/OneDrive/Desktop/MERN-Stack-Blood-Bank-master/frontend/src/screens/LogHistoryScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Message","Loader","getLogHistory","ReactPaginate","Moment","moment","UserLogHistoryScreen","dispatch","userLogHistory","state","loading","error","logHistory","currentPage","setCurrentPage","itemsPerPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalItems","Math","ceil","length","map","log","_id","user","name","email","logDate","e","selected"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getLogHistory } from '../actions/userActions'\nimport ReactPaginate from 'react-paginate'\nimport Moment from 'react-moment'\nimport moment from 'moment'\n\nconst UserLogHistoryScreen = () => {\n  const dispatch = useDispatch()\n\n  const userLogHistory = useSelector((state) => state.userLogHistory)\n  const { loading, error, logHistory } = userLogHistory\n\n  useEffect(() => {\n    dispatch(getLogHistory())\n  }, [dispatch])\n\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const itemsPerPage = 10\n  const indexOfLastItem = currentPage * itemsPerPage\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage\n  const currentItems =\n    logHistory && logHistory.slice(indexOfFirstItem, indexOfLastItem)\n  const totalItems = logHistory && Math.ceil(logHistory.length / itemsPerPage)\n\n  return (\n    <>\n      <h1>Users Login History</h1>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <div className='table-responsive'>\n            <table className='table table-sm hover bordered striped'>\n              <thead>\n                <tr>\n                  <th>LOG ID</th>\n                  <th>NAME</th>\n                  <th>EMAIL</th>\n                  <th>LOGIN DATE</th>\n                  <th>LOGIN TIME</th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentItems &&\n                  currentItems.map((log) => (\n                    <tr key={log._id}>\n                      <td>{log._id}</td>\n                      <td>{log.user.name}</td>\n                      <td>\n                        <a href={`mailto:${log.user.email}`}>\n                          {log.user.email}\n                        </a>\n                      </td>\n                      <td>\n                        <Moment format='YYYY-MM-DD'>\n                          {moment(log.logDate)}\n                        </Moment>\n                      </td>\n                      <td>\n                        <Moment format='HH:mm:ss'>{moment(log.logDate)}</Moment>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n          {logHistory && logHistory.length > itemsPerPage && (\n            <div className='d-flex justify-content-center'>\n              <ReactPaginate\n                previousLabel='previous'\n                previousClassName='page-item'\n                previousLinkClassName='page-link'\n                nextLabel='next'\n                nextClassName='page-item'\n                nextLinkClassName='page-link'\n                pageClassName='page-item'\n                pageLinkClassName='page-link'\n                activeClassName='page-item active'\n                activeLinkClassName={'page-link'}\n                breakLabel={'...'}\n                breakClassName={'page-item'}\n                breakLinkClassName={'page-link'}\n                pageCount={totalItems && totalItems}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={2}\n                onPageChange={(e) => setCurrentPage(e.selected + 1)}\n                containerClassName={'page pagination'}\n              />\n            </div>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default UserLogHistoryScreen\n"]},"metadata":{},"sourceType":"module"}