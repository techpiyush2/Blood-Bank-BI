{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer, userLogHistoryReducer } from './reducers/userReducers';\nimport { bloodStoreCreateReducer, bloodStoreDeleteReducer, bloodStoreListReducer, bloodStoreUpdateReducer } from './reducers/bloodStoreReducers';\nimport { bloodRequestCreateReducer, bloodRequestDeleteReducer, bloodRequestListReducer, bloodRequestUpdateReducer } from './reducers/bloodRequestReducers';\nimport { bloodIssueCreateReducer, bloodIssueDeleteReducer, bloodIssueListReducer } from './reducers/bloodIssueReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userLogHistory: userLogHistoryReducer,\n  bloodStoreList: bloodStoreListReducer,\n  bloodStoreCreate: bloodStoreCreateReducer,\n  bloodStoreUpdate: bloodStoreUpdateReducer,\n  bloodStoreDelete: bloodStoreDeleteReducer,\n  bloodRequestList: bloodRequestListReducer,\n  bloodRequestCreate: bloodRequestCreateReducer,\n  bloodRequestUpdate: bloodRequestUpdateReducer,\n  bloodRequestDelete: bloodRequestDeleteReducer,\n  bloodIssueList: bloodIssueListReducer,\n  bloodIssueCreate: bloodIssueCreateReducer,\n  bloodIssueDelete: bloodIssueDeleteReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/pk409/OneDrive/Desktop/MERN-Stack-Blood-Bank-master/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","userLogHistoryReducer","bloodStoreCreateReducer","bloodStoreDeleteReducer","bloodStoreListReducer","bloodStoreUpdateReducer","bloodRequestCreateReducer","bloodRequestDeleteReducer","bloodRequestListReducer","bloodRequestUpdateReducer","bloodIssueCreateReducer","bloodIssueDeleteReducer","bloodIssueListReducer","reducer","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","userLogHistory","bloodStoreList","bloodStoreCreate","bloodStoreUpdate","bloodStoreDelete","bloodRequestList","bloodRequestCreate","bloodRequestUpdate","bloodRequestDelete","bloodIssueList","bloodIssueCreate","bloodIssueDelete","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF,EAQEC,qBARF,QASO,yBATP;AAUA,SACEC,uBADF,EAEEC,uBAFF,EAGEC,qBAHF,EAIEC,uBAJF,QAKO,+BALP;AAOA,SACEC,yBADF,EAEEC,yBAFF,EAGEC,uBAHF,EAIEC,yBAJF,QAKO,iCALP;AAOA,SACEC,uBADF,EAEEC,uBAFF,EAGEC,qBAHF,QAIO,+BAJP;AAOA,MAAMC,OAAO,GAAGvB,eAAe,CAAC;AAC9BwB,EAAAA,SAAS,EAAEpB,gBADmB;AAE9BqB,EAAAA,YAAY,EAAEpB,mBAFgB;AAG9BqB,EAAAA,WAAW,EAAEpB,kBAHiB;AAI9BqB,EAAAA,iBAAiB,EAAEpB,wBAJW;AAK9BqB,EAAAA,QAAQ,EAAEpB,eALoB;AAM9BqB,EAAAA,UAAU,EAAEpB,iBANkB;AAO9BqB,EAAAA,UAAU,EAAEpB,iBAPkB;AAQ9BqB,EAAAA,cAAc,EAAEpB,qBARc;AAU9BqB,EAAAA,cAAc,EAAElB,qBAVc;AAW9BmB,EAAAA,gBAAgB,EAAErB,uBAXY;AAY9BsB,EAAAA,gBAAgB,EAAEnB,uBAZY;AAa9BoB,EAAAA,gBAAgB,EAAEtB,uBAbY;AAe9BuB,EAAAA,gBAAgB,EAAElB,uBAfY;AAgB9BmB,EAAAA,kBAAkB,EAAErB,yBAhBU;AAiB9BsB,EAAAA,kBAAkB,EAAEnB,yBAjBU;AAkB9BoB,EAAAA,kBAAkB,EAAEtB,yBAlBU;AAoB9BuB,EAAAA,cAAc,EAAElB,qBApBc;AAqB9BmB,EAAAA,gBAAgB,EAAErB,uBArBY;AAsB9BsB,EAAAA,gBAAgB,EAAErB;AAtBY,CAAD,CAA/B;AA0BA,MAAMsB,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBxB,EAAAA,SAAS,EAAE;AAAEyB,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAGA,MAAMO,UAAU,GAAG,CAAChD,KAAD,CAAnB;AAEA,MAAMiD,KAAK,GAAGpD,WAAW,CACvBwB,OADuB,EAEvByB,YAFuB,EAGvB7C,mBAAmB,CAACF,eAAe,CAAC,GAAGiD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n  userLogHistoryReducer,\n} from './reducers/userReducers'\nimport {\n  bloodStoreCreateReducer,\n  bloodStoreDeleteReducer,\n  bloodStoreListReducer,\n  bloodStoreUpdateReducer,\n} from './reducers/bloodStoreReducers'\n\nimport {\n  bloodRequestCreateReducer,\n  bloodRequestDeleteReducer,\n  bloodRequestListReducer,\n  bloodRequestUpdateReducer,\n} from './reducers/bloodRequestReducers'\n\nimport {\n  bloodIssueCreateReducer,\n  bloodIssueDeleteReducer,\n  bloodIssueListReducer,\n} from './reducers/bloodIssueReducers'\n\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userLogHistory: userLogHistoryReducer,\n\n  bloodStoreList: bloodStoreListReducer,\n  bloodStoreCreate: bloodStoreCreateReducer,\n  bloodStoreUpdate: bloodStoreUpdateReducer,\n  bloodStoreDelete: bloodStoreDeleteReducer,\n\n  bloodRequestList: bloodRequestListReducer,\n  bloodRequestCreate: bloodRequestCreateReducer,\n  bloodRequestUpdate: bloodRequestUpdateReducer,\n  bloodRequestDelete: bloodRequestDeleteReducer,\n\n  bloodIssueList: bloodIssueListReducer,\n  bloodIssueCreate: bloodIssueCreateReducer,\n  bloodIssueDelete: bloodIssueDeleteReducer,\n\n})\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n}\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}