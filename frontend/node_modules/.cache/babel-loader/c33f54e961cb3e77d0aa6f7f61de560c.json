{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\pk409\\\\OneDrive\\\\Desktop\\\\MERN-Stack-Blood-Bank-master\\\\frontend\\\\src\\\\screens\\\\UserListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listUsers, deleteUser, updateUser, register } from '../actions/userActions';\nimport ReactPaginate from 'react-paginate';\nimport { confirmAlert } from 'react-confirm-alert';\nimport { Confirm } from '../components/Confirm';\n\nconst UserListScreen = ({\n  match\n}) => {\n  _s();\n\n  const [id, setId] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [message, setMessage] = useState('');\n  const [edit, setEdit] = useState(false);\n  const dispatch = useDispatch();\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error,\n    users\n  } = userList;\n  const userDelete = useSelector(state => state.userDelete);\n  const {\n    success: successDelete,\n    error: errorDelete\n  } = userDelete;\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading: loadingCreateRegister,\n    error: errorCreateRegister,\n    success: successCreateRegister\n  } = userRegister;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate;\n\n  const formCleanHandler = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setEdit(false);\n  };\n\n  useEffect(() => {\n    dispatch(listUsers());\n\n    if (successUpdate || successCreateRegister) {\n      formCleanHandler();\n    }\n  }, [dispatch, successDelete, successUpdate, successCreateRegister]);\n\n  const deleteHandler = id => {// confirmAlert(Confirm(() => dispatch(deleteUser(id))))\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Password do not match');\n    } else {\n      edit ? dispatch(updateUser({\n        _id: id,\n        name,\n        email,\n        password,\n        isAdmin\n      })) : dispatch(register(name, email, password));\n    }\n  };\n\n  const editHandler = user => {\n    setName(user.name);\n    setEmail(user.email);\n    setIsAdmin(user.isAdmin);\n    setPassword('');\n    setId(user._id);\n    setEdit(true);\n  };\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = users && users.slice(indexOfFirstItem, indexOfLastItem);\n  const totalItems = users && Math.ceil(users.length / itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"editUserModal\",\n      \"data-bs-backdrop\": \"static\",\n      \"data-bs-keyboard\": \"false\",\n      tabIndex: \"-1\",\n      \"aria-labelledby\": \"editUserModalLabel\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content modal-background\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              id: \"editUserModalLabel\",\n              children: \"Edit User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              \"data-bs-dismiss\": \"modal\",\n              \"aria-label\": \"Close\",\n              onClick: formCleanHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [message && /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 27\n            }, this), successUpdate && /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: \"User has been updated successfully.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: errorUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 31\n            }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), successCreateRegister && /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: \"User has been Created successfully.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), errorCreateRegister && /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: errorCreateRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), loadingCreateRegister && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 41\n            }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: submitHandler,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter name\",\n                  className: \"form-control\",\n                  value: name,\n                  onChange: e => setName(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  placeholder: \"Enter email\",\n                  className: \"form-control\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  placeholder: \"Enter password\",\n                  className: \"form-control\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"confirmPassword\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  placeholder: \"Confirm password\",\n                  className: \"form-control\",\n                  value: confirmPassword,\n                  onChange: e => setConfirmPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"isAdmin\",\n                  label: \"Is Admin\",\n                  checked: isAdmin,\n                  onChange: e => setIsAdmin(e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this), ' ', /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"isAdmin\",\n                  id: \"isAdmin\",\n                  children: \"Admin?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-footer\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-secondary\",\n                  \"data-bs-dismiss\": \"modal\",\n                  onClick: formCleanHandler,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-light btn-sm\",\n        \"data-bs-toggle\": \"modal\",\n        \"data-bs-target\": \"#editUserModal\",\n        children: [' ', /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), \" REGISTER NEW USER\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), successDelete && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"success\",\n      children: \"User has been deleted successfully.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), errorDelete && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 23\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-sm hover bordered striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"NAME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"EMAIL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ADMIN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentItems.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `mailto:${user.email}`,\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.isAdmin ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-check\",\n                  style: {\n                    color: 'green'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\",\n                  style: {\n                    color: 'red'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-light btn-sm\",\n                  onClick: e => editHandler(user),\n                  \"data-bs-toggle\": \"modal\",\n                  \"data-bs-target\": \"#editUserModal\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger btn-sm\",\n                  onClick: () => deleteHandler(user._id),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-trash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          previousLabel: \"previous\",\n          previousClassName: \"page-item\",\n          previousLinkClassName: \"page-link\",\n          nextLabel: \"next\",\n          nextClassName: \"page-item\",\n          nextLinkClassName: \"page-link\",\n          pageClassName: \"page-item\",\n          pageLinkClassName: \"page-link\",\n          activeClassName: \"page-item active\",\n          activeLinkClassName: 'page-link',\n          breakLabel: '...',\n          breakClassName: 'page-item',\n          breakLinkClassName: 'page-link',\n          pageCount: totalItems && totalItems,\n          marginPagesDisplayed: 2,\n          pageRangeDisplayed: 2,\n          onPageChange: e => setCurrentPage(e.selected + 1),\n          containerClassName: 'page pagination'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(UserListScreen, \"GQWX05HIfCz1U/zHtQQP5GyJeow=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = UserListScreen;\nexport default UserListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserListScreen\");","map":{"version":3,"sources":["C:/Users/pk409/OneDrive/Desktop/MERN-Stack-Blood-Bank-master/frontend/src/screens/UserListScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Message","Loader","listUsers","deleteUser","updateUser","register","ReactPaginate","confirmAlert","Confirm","UserListScreen","match","id","setId","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isAdmin","setIsAdmin","message","setMessage","edit","setEdit","dispatch","userList","state","loading","error","users","userDelete","success","successDelete","errorDelete","userRegister","loadingCreateRegister","errorCreateRegister","successCreateRegister","userUpdate","loadingUpdate","errorUpdate","successUpdate","formCleanHandler","deleteHandler","submitHandler","e","preventDefault","_id","editHandler","user","currentPage","setCurrentPage","itemsPerPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalItems","Math","ceil","length","target","value","checked","map","color","selected"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACEC,SADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,QAJF,QAKO,wBALP;AAMA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACpC,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcf,QAAQ,CAAC,IAAD,CAA5B;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,eAAD,EAAkBC,kBAAlB,IAAwCvB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACwB,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC4B,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAM8B,QAAQ,GAAG7B,WAAW,EAA5B;AAEA,QAAM8B,QAAQ,GAAG7B,WAAW,CAAE8B,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA4BJ,QAAlC;AAEA,QAAMK,UAAU,GAAGlC,WAAW,CAAE8B,KAAD,IAAWA,KAAK,CAACI,UAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA,OAAO,EAAEC,aAAX;AAA0BJ,IAAAA,KAAK,EAAEK;AAAjC,MAAiDH,UAAvD;AAEA,QAAMI,YAAY,GAAGtC,WAAW,CAAE8B,KAAD,IAAWA,KAAK,CAACQ,YAAlB,CAAhC;AACA,QAAM;AACJP,IAAAA,OAAO,EAAEQ,qBADL;AAEJP,IAAAA,KAAK,EAAEQ,mBAFH;AAGJL,IAAAA,OAAO,EAAEM;AAHL,MAIFH,YAJJ;AAMA,QAAMI,UAAU,GAAG1C,WAAW,CAAE8B,KAAD,IAAWA,KAAK,CAACY,UAAlB,CAA9B;AACA,QAAM;AACJX,IAAAA,OAAO,EAAEY,aADL;AAEJX,IAAAA,KAAK,EAAEY,WAFH;AAGJT,IAAAA,OAAO,EAAEU;AAHL,MAIFH,UAJJ;;AAMA,QAAMI,gBAAgB,GAAG,MAAM;AAC7B/B,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAM,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAND;;AAQA9B,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,QAAQ,CAACzB,SAAS,EAAV,CAAR;;AACA,QAAI0C,aAAa,IAAIJ,qBAArB,EAA4C;AAC1CK,MAAAA,gBAAgB;AACjB;AACF,GALQ,EAKN,CAAClB,QAAD,EAAWQ,aAAX,EAA0BS,aAA1B,EAAyCJ,qBAAzC,CALM,CAAT;;AAOA,QAAMM,aAAa,GAAInC,EAAD,IAAQ,CAC5B;AACD,GAFD;;AAIA,QAAMoC,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIhC,QAAQ,KAAKE,eAAjB,EAAkC;AAChCK,MAAAA,UAAU,CAAC,uBAAD,CAAV;AACD,KAFD,MAEO;AACLC,MAAAA,IAAI,GACAE,QAAQ,CAACvB,UAAU,CAAC;AAAE8C,QAAAA,GAAG,EAAEvC,EAAP;AAAWE,QAAAA,IAAX;AAAiBE,QAAAA,KAAjB;AAAwBE,QAAAA,QAAxB;AAAkCI,QAAAA;AAAlC,OAAD,CAAX,CADR,GAEAM,QAAQ,CAACtB,QAAQ,CAACQ,IAAD,EAAOE,KAAP,EAAcE,QAAd,CAAT,CAFZ;AAGD;AACF,GAVD;;AAYA,QAAMkC,WAAW,GAAIC,IAAD,IAAU;AAC5BtC,IAAAA,OAAO,CAACsC,IAAI,CAACvC,IAAN,CAAP;AACAG,IAAAA,QAAQ,CAACoC,IAAI,CAACrC,KAAN,CAAR;AACAO,IAAAA,UAAU,CAAC8B,IAAI,CAAC/B,OAAN,CAAV;AACAH,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAN,IAAAA,KAAK,CAACwC,IAAI,CAACF,GAAN,CAAL;AACAxB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAPD;;AASA,QAAM,CAAC2B,WAAD,EAAcC,cAAd,IAAgCzD,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAM0D,YAAY,GAAG,CAArB;AACA,QAAMC,eAAe,GAAGH,WAAW,GAAGE,YAAtC;AACA,QAAME,gBAAgB,GAAGD,eAAe,GAAGD,YAA3C;AACA,QAAMG,YAAY,GAAG1B,KAAK,IAAIA,KAAK,CAAC2B,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAA9B;AACA,QAAMI,UAAU,GAAG5B,KAAK,IAAI6B,IAAI,CAACC,IAAL,CAAU9B,KAAK,CAAC+B,MAAN,GAAeR,YAAzB,CAA5B;AAEA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,EAAE,EAAC,eAFL;AAGE,0BAAiB,QAHnB;AAIE,0BAAiB,OAJnB;AAKE,MAAA,QAAQ,EAAC,IALX;AAME,yBAAgB,oBANlB;AAOE,qBAAY,MAPd;AAAA,6BASE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,aAAd;AAA4B,cAAA,EAAE,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,EAAC,WAFZ;AAGE,iCAAgB,OAHlB;AAIE,4BAAW,OAJb;AAKE,cAAA,OAAO,EAAEV;AALX;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,uBACGtB,OAAO,iBAAI,QAAC,OAAD;AAAS,cAAA,OAAO,EAAC,QAAjB;AAAA,wBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADd,EAEGqB,aAAa,iBACZ,QAAC,OAAD;AAAS,cAAA,OAAO,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAOGD,WAAW,iBAAI,QAAC,OAAD;AAAS,cAAA,OAAO,EAAC,QAAjB;AAAA,wBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,oBAPlB,EAQGD,aAAa,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBARpB,EASGF,qBAAqB,iBACpB,QAAC,OAAD;AAAS,cAAA,OAAO,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,EAcGD,mBAAmB,iBAClB,QAAC,OAAD;AAAS,cAAA,OAAO,EAAC,QAAjB;AAAA,wBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,oBAfJ,EAiBGD,qBAAqB,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBAjB5B,EAmBGR,OAAO,gBACN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBADM,GAEJC,KAAK,gBACP,QAAC,OAAD;AAAS,cAAA,OAAO,EAAC,QAAjB;AAAA,wBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADO,gBAGP;AAAM,cAAA,QAAQ,EAAEgB,aAAhB;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,WAAW,EAAC,YAFd;AAGE,kBAAA,SAAS,EAAC,cAHZ;AAIE,kBAAA,KAAK,EAAElC,IAJT;AAKE,kBAAA,QAAQ,EAAGmC,CAAD,IAAOlC,OAAO,CAACkC,CAAC,CAACgB,MAAF,CAASC,KAAV,CAL1B;AAME,kBAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAYE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,IAAI,EAAC,OADP;AAEE,kBAAA,WAAW,EAAC,aAFd;AAGE,kBAAA,SAAS,EAAC,cAHZ;AAIE,kBAAA,KAAK,EAAElD,KAJT;AAKE,kBAAA,QAAQ,EAAGiC,CAAD,IAAOhC,QAAQ,CAACgC,CAAC,CAACgB,MAAF,CAASC,KAAV,CAL3B;AAME,kBAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,eAuBE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,IAAI,EAAC,UADP;AAEE,kBAAA,WAAW,EAAC,gBAFd;AAGE,kBAAA,SAAS,EAAC,cAHZ;AAIE,kBAAA,KAAK,EAAEhD,QAJT;AAKE,kBAAA,QAAQ,EAAG+B,CAAD,IAAO9B,WAAW,CAAC8B,CAAC,CAACgB,MAAF,CAASC,KAAV;AAL9B;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvBF,eAiCE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,IAAI,EAAC,UADP;AAEE,kBAAA,WAAW,EAAC,kBAFd;AAGE,kBAAA,SAAS,EAAC,cAHZ;AAIE,kBAAA,KAAK,EAAE9C,eAJT;AAKE,kBAAA,QAAQ,EAAG6B,CAAD,IAAO5B,kBAAkB,CAAC4B,CAAC,CAACgB,MAAF,CAASC,KAAV;AALrC;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjCF,eA4CE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AACE,kBAAA,IAAI,EAAC,UADP;AAEE,kBAAA,EAAE,EAAC,SAFL;AAGE,kBAAA,KAAK,EAAC,UAHR;AAIE,kBAAA,OAAO,EAAE5C,OAJX;AAKE,kBAAA,QAAQ,EAAG2B,CAAD,IAAO1B,UAAU,CAAC0B,CAAC,CAACgB,MAAF,CAASE,OAAV;AAL7B;AAAA;AAAA;AAAA;AAAA,wBADF,EAOK,GAPL,eAQE;AAAO,kBAAA,OAAO,EAAC,SAAf;AAAyB,kBAAA,EAAE,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA5CF,eAyDE;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACE;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,SAAS,EAAC,mBAFZ;AAGE,qCAAgB,OAHlB;AAIE,kBAAA,OAAO,EAAErB,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eASE;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzDF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YADF,eA6HE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAC,sBADZ;AAEE,0BAAe,OAFjB;AAGE,0BAAe,gBAHjB;AAAA,mBAKG,GALH,eAME;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7HF,EAyIGV,aAAa,iBACZ,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1IJ,EA4IGC,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YA5IlB,EA6IGN,OAAO,gBACN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADM,GAEJC,KAAK,gBACP,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAO,UAAA,SAAS,EAAC,uCAAjB;AAAA,kCACE;AAAA,mCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAA,sBACG2B,YAAY,CAACS,GAAb,CAAkBf,IAAD,iBAChB;AAAA,sCACE;AAAA,0BAAKA,IAAI,CAACF;AAAV;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAKE,IAAI,CAACvC;AAAV;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA,uCACE;AAAG,kBAAA,IAAI,EAAG,UAASuC,IAAI,CAACrC,KAAM,EAA9B;AAAA,4BAAkCqC,IAAI,CAACrC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAHF,eAME;AAAA,0BACGqC,IAAI,CAAC/B,OAAL,gBACC;AACE,kBAAA,SAAS,EAAC,cADZ;AAEE,kBAAA,KAAK,EAAE;AAAE+C,oBAAAA,KAAK,EAAE;AAAT;AAFT;AAAA;AAAA;AAAA;AAAA,wBADD,gBAMC;AACE,kBAAA,SAAS,EAAC,cADZ;AAEE,kBAAA,KAAK,EAAE;AAAEA,oBAAAA,KAAK,EAAE;AAAT;AAFT;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,sBANF,eAmBE;AAAA,wCACE;AACE,kBAAA,SAAS,EAAC,sBADZ;AAEE,kBAAA,OAAO,EAAGpB,CAAD,IAAOG,WAAW,CAACC,IAAD,CAF7B;AAGE,oCAAe,OAHjB;AAIE,oCAAe,gBAJjB;AAAA,yCAME;AAAG,oBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,wBADF,eAUE;AACE,kBAAA,SAAS,EAAC,uBADZ;AAEE,kBAAA,OAAO,EAAE,MAAMN,aAAa,CAACM,IAAI,CAACF,GAAN,CAF9B;AAAA,yCAIE;AAAG,oBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,wBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBF;AAAA,eAASE,IAAI,CAACF,GAAd;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAuDE;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA,+BACE,QAAC,aAAD;AACE,UAAA,aAAa,EAAC,UADhB;AAEE,UAAA,iBAAiB,EAAC,WAFpB;AAGE,UAAA,qBAAqB,EAAC,WAHxB;AAIE,UAAA,SAAS,EAAC,MAJZ;AAKE,UAAA,aAAa,EAAC,WALhB;AAME,UAAA,iBAAiB,EAAC,WANpB;AAOE,UAAA,aAAa,EAAC,WAPhB;AAQE,UAAA,iBAAiB,EAAC,WARpB;AASE,UAAA,eAAe,EAAC,kBATlB;AAUE,UAAA,mBAAmB,EAAE,WAVvB;AAWE,UAAA,UAAU,EAAE,KAXd;AAYE,UAAA,cAAc,EAAE,WAZlB;AAaE,UAAA,kBAAkB,EAAE,WAbtB;AAcE,UAAA,SAAS,EAAEU,UAAU,IAAIA,UAd3B;AAeE,UAAA,oBAAoB,EAAE,CAfxB;AAgBE,UAAA,kBAAkB,EAAE,CAhBtB;AAiBE,UAAA,YAAY,EAAGZ,CAAD,IAAOM,cAAc,CAACN,CAAC,CAACqB,QAAF,GAAa,CAAd,CAjBrC;AAkBE,UAAA,kBAAkB,EAAE;AAlBtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAvDF;AAAA,oBAlJJ;AAAA,kBADF;AAoOD,CApTD;;GAAM5D,c;UAUaX,W,EAEAC,W,EAGEA,W,EAGEA,W,EAOFA,W;;;KAzBfU,c;AAsTN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  listUsers,\n  deleteUser,\n  updateUser,\n  register,\n} from '../actions/userActions'\nimport ReactPaginate from 'react-paginate'\n\nimport { confirmAlert } from 'react-confirm-alert'\nimport { Confirm } from '../components/Confirm'\n\nconst UserListScreen = ({ match }) => {\n  const [id, setId] = useState(null)\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n  const [message, setMessage] = useState('')\n  const [edit, setEdit] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete, error: errorDelete } = userDelete\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const {\n    loading: loadingCreateRegister,\n    error: errorCreateRegister,\n    success: successCreateRegister,\n  } = userRegister\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  const formCleanHandler = () => {\n    setName('')\n    setEmail('')\n    setPassword('')\n    setConfirmPassword('')\n    setEdit(false)\n  }\n\n  useEffect(() => {\n    dispatch(listUsers())\n    if (successUpdate || successCreateRegister) {\n      formCleanHandler()\n    }\n  }, [dispatch, successDelete, successUpdate, successCreateRegister])\n\n  const deleteHandler = (id) => {\n    // confirmAlert(Confirm(() => dispatch(deleteUser(id))))\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    if (password !== confirmPassword) {\n      setMessage('Password do not match')\n    } else {\n      edit\n        ? dispatch(updateUser({ _id: id, name, email, password, isAdmin }))\n        : dispatch(register(name, email, password))\n    }\n  }\n\n  const editHandler = (user) => {\n    setName(user.name)\n    setEmail(user.email)\n    setIsAdmin(user.isAdmin)\n    setPassword('')\n    setId(user._id)\n    setEdit(true)\n  }\n\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const itemsPerPage = 5\n  const indexOfLastItem = currentPage * itemsPerPage\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage\n  const currentItems = users && users.slice(indexOfFirstItem, indexOfLastItem)\n  const totalItems = users && Math.ceil(users.length / itemsPerPage)\n\n  return (\n    <>\n      <div\n        className='modal fade'\n        id='editUserModal'\n        data-bs-backdrop='static'\n        data-bs-keyboard='false'\n        tabIndex='-1'\n        aria-labelledby='editUserModalLabel'\n        aria-hidden='true'\n      >\n        <div className='modal-dialog'>\n          <div className='modal-content modal-background'>\n            <div className='modal-header'>\n              <h5 className='modal-title' id='editUserModalLabel'>\n                Edit User\n              </h5>\n              <button\n                type='button'\n                className='btn-close'\n                data-bs-dismiss='modal'\n                aria-label='Close'\n                onClick={formCleanHandler}\n              ></button>\n            </div>\n            <div className='modal-body'>\n              {message && <Message variant='danger'>{message}</Message>}\n              {successUpdate && (\n                <Message variant='success'>\n                  User has been updated successfully.\n                </Message>\n              )}\n              {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n              {loadingUpdate && <Loader />}\n              {successCreateRegister && (\n                <Message variant='success'>\n                  User has been Created successfully.\n                </Message>\n              )}\n              {errorCreateRegister && (\n                <Message variant='danger'>{errorCreateRegister}</Message>\n              )}\n              {loadingCreateRegister && <Loader />}\n\n              {loading ? (\n                <Loader />\n              ) : error ? (\n                <Message variant='danger'>{error}</Message>\n              ) : (\n                <form onSubmit={submitHandler}>\n                  <div className='form-group'>\n                    <label htmlFor='name'>Name</label>\n                    <input\n                      type='text'\n                      placeholder='Enter name'\n                      className='form-control'\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                      required\n                    />\n                  </div>\n                  <div className='form-group'>\n                    <label htmlFor='email'>Email Address</label>\n                    <input\n                      type='email'\n                      placeholder='Enter email'\n                      className='form-control'\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      required\n                    />\n                  </div>\n                  <div className='form-group'>\n                    <label htmlFor='password'>Password</label>\n                    <input\n                      type='password'\n                      placeholder='Enter password'\n                      className='form-control'\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </div>\n                  <div className='form-group'>\n                    <label htmlFor='confirmPassword'>Confirm Password</label>\n                    <input\n                      type='password'\n                      placeholder='Confirm password'\n                      className='form-control'\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                  </div>\n\n                  <div className='form-group'>\n                    <input\n                      type='checkbox'\n                      id='isAdmin'\n                      label='Is Admin'\n                      checked={isAdmin}\n                      onChange={(e) => setIsAdmin(e.target.checked)}\n                    />{' '}\n                    <label htmlFor='isAdmin' id='isAdmin'>\n                      Admin?\n                    </label>\n                  </div>\n\n                  <div className='modal-footer'>\n                    <button\n                      type='button'\n                      className='btn btn-secondary'\n                      data-bs-dismiss='modal'\n                      onClick={formCleanHandler}\n                    >\n                      Close\n                    </button>\n                    <button type='submit' className='btn btn-primary'>\n                      Update\n                    </button>\n                  </div>\n                </form>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='d-flex justify-content-between'>\n        <h1>Users</h1>\n        <button\n          className='btn btn-light btn-sm'\n          data-bs-toggle='modal'\n          data-bs-target='#editUserModal'\n        >\n          {' '}\n          <i className='fas fa-plus'></i> REGISTER NEW USER\n        </button>\n      </div>\n\n      {successDelete && (\n        <Message variant='success'>User has been deleted successfully.</Message>\n      )}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <div className='table-responsive'>\n            <table className='table table-sm hover bordered striped'>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>NAME</th>\n                  <th>EMAIL</th>\n                  <th>ADMIN</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentItems.map((user) => (\n                  <tr key={user._id}>\n                    <td>{user._id}</td>\n                    <td>{user.name}</td>\n                    <td>\n                      <a href={`mailto:${user.email}`}>{user.email}</a>\n                    </td>\n                    <td>\n                      {user.isAdmin ? (\n                        <i\n                          className='fas fa-check'\n                          style={{ color: 'green' }}\n                        ></i>\n                      ) : (\n                        <i\n                          className='fas fa-times'\n                          style={{ color: 'red' }}\n                        ></i>\n                      )}\n                    </td>\n                    <td>\n                      <button\n                        className='btn btn-light btn-sm'\n                        onClick={(e) => editHandler(user)}\n                        data-bs-toggle='modal'\n                        data-bs-target='#editUserModal'\n                      >\n                        <i className='fas fa-edit'></i>\n                      </button>\n\n                      <button\n                        className='btn btn-danger btn-sm'\n                        onClick={() => deleteHandler(user._id)}\n                      >\n                        <i className='fas fa-trash'></i>\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <div className='d-flex justify-content-center'>\n            <ReactPaginate\n              previousLabel='previous'\n              previousClassName='page-item'\n              previousLinkClassName='page-link'\n              nextLabel='next'\n              nextClassName='page-item'\n              nextLinkClassName='page-link'\n              pageClassName='page-item'\n              pageLinkClassName='page-link'\n              activeClassName='page-item active'\n              activeLinkClassName={'page-link'}\n              breakLabel={'...'}\n              breakClassName={'page-item'}\n              breakLinkClassName={'page-link'}\n              pageCount={totalItems && totalItems}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={2}\n              onPageChange={(e) => setCurrentPage(e.selected + 1)}\n              containerClassName={'page pagination'}\n            />\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n"]},"metadata":{},"sourceType":"module"}