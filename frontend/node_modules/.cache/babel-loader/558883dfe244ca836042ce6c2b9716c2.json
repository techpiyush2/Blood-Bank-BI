{"ast":null,"code":"import { BLOOD_REQUEST_REQUEST, BLOOD_REQUEST_SUCCESS, BLOOD_REQUEST_FAIL, BLOOD_REQUEST_RESET, BLOOD_REQUEST_CREATE_REQUEST, BLOOD_REQUEST_CREATE_SUCCESS, BLOOD_REQUEST_CREATE_FAIL, BLOOD_REQUEST_CREATE_RESET, BLOOD_REQUEST_UPDATE_REQUEST, BLOOD_REQUEST_UPDATE_SUCCESS, BLOOD_REQUEST_UPDATE_FAIL, BLOOD_REQUEST_UPDATE_RESET, BLOOD_REQUEST_DELETE_REQUEST, BLOOD_REQUEST_DELETE_SUCCESS, BLOOD_REQUEST_DELETE_FAIL } from '../constants/bloodRequestConstants';\nimport { CLEAR_ALERTS } from '../constants/userConstants';\nexport const bloodRequestListReducer = (state = {\n  bloodRequests: []\n}, action) => {\n  switch (action.type) {\n    case BLOOD_REQUEST_REQUEST:\n      return {\n        loading: true\n      };\n\n    case BLOOD_REQUEST_SUCCESS:\n      return {\n        loading: false,\n        bloodRequests: action.payload\n      };\n\n    case BLOOD_REQUEST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case BLOOD_REQUEST_RESET:\n      return {\n        bloodRequests: []\n      };\n\n    default:\n      return state;\n  }\n};\nexport const bloodRequestCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_REQUEST_CREATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case BLOOD_REQUEST_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        bloodRequests: action.payload\n      };\n\n    case BLOOD_REQUEST_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case BLOOD_REQUEST_CREATE_RESET:\n      return {};\n\n    case CLEAR_ALERTS:\n      return {\n        success: false\n      };\n\n    default:\n      return state;\n  }\n};\nexport const bloodRequestUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_REQUEST_UPDATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case BLOOD_REQUEST_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case BLOOD_REQUEST_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case BLOOD_REQUEST_UPDATE_RESET:\n      return {};\n\n    case CLEAR_ALERTS:\n      return {\n        success: false\n      };\n\n    default:\n      return state;\n  }\n};\nexport const bloodRequestDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_REQUEST_DELETE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case BLOOD_REQUEST_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case BLOOD_REQUEST_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case CLEAR_ALERTS:\n      return {\n        success: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/pk409/OneDrive/Desktop/MERN-Stack-Blood-Bank-master/frontend/src/reducers/bloodRequestReducers.js"],"names":["BLOOD_REQUEST_REQUEST","BLOOD_REQUEST_SUCCESS","BLOOD_REQUEST_FAIL","BLOOD_REQUEST_RESET","BLOOD_REQUEST_CREATE_REQUEST","BLOOD_REQUEST_CREATE_SUCCESS","BLOOD_REQUEST_CREATE_FAIL","BLOOD_REQUEST_CREATE_RESET","BLOOD_REQUEST_UPDATE_REQUEST","BLOOD_REQUEST_UPDATE_SUCCESS","BLOOD_REQUEST_UPDATE_FAIL","BLOOD_REQUEST_UPDATE_RESET","BLOOD_REQUEST_DELETE_REQUEST","BLOOD_REQUEST_DELETE_SUCCESS","BLOOD_REQUEST_DELETE_FAIL","CLEAR_ALERTS","bloodRequestListReducer","state","bloodRequests","action","type","loading","payload","error","bloodRequestCreateReducer","success","bloodRequestUpdateReducer","bloodRequestDeleteReducer"],"mappings":"AAAA,SACEA,qBADF,EAEEC,qBAFF,EAGEC,kBAHF,EAIEC,mBAJF,EAKEC,4BALF,EAMEC,4BANF,EAOEC,yBAPF,EAQEC,0BARF,EASEC,4BATF,EAUEC,4BAVF,EAWEC,yBAXF,EAYEC,0BAZF,EAaEC,4BAbF,EAcEC,4BAdF,EAeEC,yBAfF,QAgBO,oCAhBP;AAiBA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,OAAO,MAAMC,uBAAuB,GAAG,CACrCC,KAAK,GAAG;AAAEC,EAAAA,aAAa,EAAE;AAAjB,CAD6B,EAErCC,MAFqC,KAGlC;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKpB,qBAAL;AACE,aAAO;AACLqB,QAAAA,OAAO,EAAE;AADJ,OAAP;;AAGF,SAAKpB,qBAAL;AACE,aAAO;AACLoB,QAAAA,OAAO,EAAE,KADJ;AAELH,QAAAA,aAAa,EAAEC,MAAM,CAACG;AAFjB,OAAP;;AAIF,SAAKpB,kBAAL;AACE,aAAO;AACLmB,QAAAA,OAAO,EAAE,KADJ;AAELE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAFT,OAAP;;AAIF,SAAKnB,mBAAL;AACE,aAAO;AACLe,QAAAA,aAAa,EAAE;AADV,OAAP;;AAGF;AACE,aAAOD,KAAP;AApBJ;AAsBD,CA1BM;AA4BP,OAAO,MAAMO,yBAAyB,GAAG,CAACP,KAAK,GAAG,EAAT,EAAaE,MAAb,KAAwB;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,4BAAL;AACE,aAAO;AACLiB,QAAAA,OAAO,EAAE;AADJ,OAAP;;AAGF,SAAKhB,4BAAL;AACE,aAAO;AACLgB,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,OAAO,EAAE,IAFJ;AAGLP,QAAAA,aAAa,EAAEC,MAAM,CAACG;AAHjB,OAAP;;AAKF,SAAKhB,yBAAL;AACE,aAAO;AACLe,QAAAA,OAAO,EAAE,KADJ;AAELE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAFT,OAAP;;AAIF,SAAKf,0BAAL;AACE,aAAO,EAAP;;AACF,SAAKQ,YAAL;AACE,aAAO;AACLU,QAAAA,OAAO,EAAE;AADJ,OAAP;;AAIF;AACE,aAAOR,KAAP;AAxBJ;AA0BD,CA3BM;AA6BP,OAAO,MAAMS,yBAAyB,GAAG,CAACT,KAAK,GAAG,EAAT,EAAaE,MAAb,KAAwB;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,4BAAL;AACE,aAAO;AACLa,QAAAA,OAAO,EAAE;AADJ,OAAP;;AAGF,SAAKZ,4BAAL;AACE,aAAO;AACLY,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKf,yBAAL;AACE,aAAO;AACLW,QAAAA,OAAO,EAAE,KADJ;AAELE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAFT,OAAP;;AAIF,SAAKX,0BAAL;AACE,aAAO,EAAP;;AACF,SAAKI,YAAL;AACE,aAAO;AACLU,QAAAA,OAAO,EAAE;AADJ,OAAP;;AAIF;AACE,aAAOR,KAAP;AAvBJ;AAyBD,CA1BM;AA4BP,OAAO,MAAMU,yBAAyB,GAAG,CAACV,KAAK,GAAG,EAAT,EAAaE,MAAb,KAAwB;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,4BAAL;AACE,aAAO;AACLS,QAAAA,OAAO,EAAE;AADJ,OAAP;;AAGF,SAAKR,4BAAL;AACE,aAAO;AACLQ,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKX,yBAAL;AACE,aAAO;AACLO,QAAAA,OAAO,EAAE,KADJ;AAELE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAFT,OAAP;;AAIF,SAAKP,YAAL;AACE,aAAO;AACLU,QAAAA,OAAO,EAAE;AADJ,OAAP;;AAIF;AACE,aAAOR,KAAP;AArBJ;AAuBD,CAxBM","sourcesContent":["import {\n  BLOOD_REQUEST_REQUEST,\n  BLOOD_REQUEST_SUCCESS,\n  BLOOD_REQUEST_FAIL,\n  BLOOD_REQUEST_RESET,\n  BLOOD_REQUEST_CREATE_REQUEST,\n  BLOOD_REQUEST_CREATE_SUCCESS,\n  BLOOD_REQUEST_CREATE_FAIL,\n  BLOOD_REQUEST_CREATE_RESET,\n  BLOOD_REQUEST_UPDATE_REQUEST,\n  BLOOD_REQUEST_UPDATE_SUCCESS,\n  BLOOD_REQUEST_UPDATE_FAIL,\n  BLOOD_REQUEST_UPDATE_RESET,\n  BLOOD_REQUEST_DELETE_REQUEST,\n  BLOOD_REQUEST_DELETE_SUCCESS,\n  BLOOD_REQUEST_DELETE_FAIL,\n} from '../constants/bloodRequestConstants'\nimport { CLEAR_ALERTS } from '../constants/userConstants'\n\nexport const bloodRequestListReducer = (\n  state = { bloodRequests: [] },\n  action\n) => {\n  switch (action.type) {\n    case BLOOD_REQUEST_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_REQUEST_SUCCESS:\n      return {\n        loading: false,\n        bloodRequests: action.payload,\n      }\n    case BLOOD_REQUEST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case BLOOD_REQUEST_RESET:\n      return {\n        bloodRequests: [],\n      }\n    default:\n      return state\n  }\n}\n\nexport const bloodRequestCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_REQUEST_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_REQUEST_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        bloodRequests: action.payload,\n      }\n    case BLOOD_REQUEST_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case BLOOD_REQUEST_CREATE_RESET:\n      return {}\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const bloodRequestUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_REQUEST_UPDATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_REQUEST_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case BLOOD_REQUEST_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case BLOOD_REQUEST_UPDATE_RESET:\n      return {}\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const bloodRequestDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOOD_REQUEST_DELETE_REQUEST:\n      return {\n        loading: true,\n      }\n    case BLOOD_REQUEST_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case BLOOD_REQUEST_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case CLEAR_ALERTS:\n      return {\n        success: false,\n      }\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}